apply plugin: 'com.android.application'
apply from: new File(rootDir , 'scripts/checkVersion.gradle').absolutePath
checkVersionForProject
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    // solve Conflict with dependency 'com.google.code.findbugs:jsr305'
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //base
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["design"]
    // ui
    compile rootProject.ext.dependencies["constraint-layout"]
    // junit
    testCompile rootProject.ext.dependencies["junit"]
    //Rxjava
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxlifecycle"]
    // dagger
    compile rootProject.ext.dependencies["dagger"]
    compile rootProject.ext.dependencies["dagger-compiler"]
    compile rootProject.ext.dependencies["jsr250-api"]
    compile rootProject.ext.dependencies["android-apt"]
    // butterknife
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["butterknife-compiler"]
    //network
    //Retorfit
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["retrofit-converter-scalars"]
    compile rootProject.ext.dependencies["retrofit-adapter-rxjava"]
    compile rootProject.ext.dependencies["retrofit-converter-gson"]
    // gson
    compile rootProject.ext.dependencies["gson"]
    // okhttp
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["okhttp-logging-interceptor"]
    //glide
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-okhttp3-integration"]
    //canary
    debugCompile rootProject.ext.dependencies["blockcanary-android"]
    releaseCompile rootProject.ext.dependencies["blockcanary-no-op"]
    debugCompile rootProject.ext.dependencies["leakcanary-android"]
    releaseCompile rootProject.ext.dependencies["leakcanary-android-no-op"]
}
